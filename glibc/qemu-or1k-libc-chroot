#!/bin/bash

# Wrapper for openrisc user space emulator to help run libc binaries.
# Similar to qemu-or1k-libc but this runs commands in a chroot environment
# with the help of binfmt to make everything look transparent.
#
# This requires sudo to run.  The chroot environment is to be setup
# as done by chroot.build.
#
# Parts of this are taken from glibc/scripts/cross-test-ssh.sh
#
# This script is also used to run the glibc testsuite.  I.e.
#
#  make check \
#   test-wrapper=$HOME/work/openrisc/or1k-utils/glibc/qemu-or1k-libc-chroot
#
# glibc doesn't use dejagnu so this wrapper script can be used.  For things
# like gcc testing we use dejagnu which uses or1k-utils/site.exp which points to
# or1k-utils/boards/or1k-linux-qemu.exp

SCRIPT_PATH=$0

trace() {
  if [ -n "${TRACE}${DEBUG}" ] ; then
    echo "$(date -u +"%F %T") TRACE $@"
  fi
}

#TRACE=1

trace "executing:      $SCRIPT_PATH"
trace "with arguments: $@"
trace "from directory: $PWD"
trace

DIR=`dirname $0`

source $DIR/glibc.config

if [ "${STRACE}" ] ; then
  STRACE="strace -fo /tmp/strace"
fi

EXPORTS="export TIMEOUTFACTOR=$TIMEOUTFACTOR; export HOME=$HOME"

#### MAIN ####
full_command="$EXPORTS; cd $PWD; $STRACE $@"
trace "full command: $full_command"

sudo chroot --userspec $USER:$USER $SYSROOTDIR /bin/sh -c "$full_command"
