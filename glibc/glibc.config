#!/bin/bash

set -ex

# Build steps from https://pmc.polytechnique.fr/pagesperso/dc/arm-en.html
# Also:
#  - https://preshing.com/20141119/how-to-build-a-gcc-cross-compiler/
#
# Notes:
#  - binutils works ok
#  - linux from my git repo installed to sysroot/usr

# This directories we will use!

# Linux for headers installed into sysroot
LINUXDIR=$HOME/work/linux

# BUILDDIR where evertying lives
#  - /gcc          - my gcc git repo
#  - /binutils-gdb - my binutils git repo
#  - /glibc        - my glibc git repo 
#  - /build-*      - build temporary files
BUILDDIR=$HOME/work/gnu-toolchain

# QEMU location to qemu binaries used for testing
QEMU=$HOME/work/openrisc/qemu

# where stuff is installed to (prefix vs sysroot?)
INSTALLDIR=$BUILDDIR/local
SYSROOTDIR=$BUILDDIR/sysroot

# Cross compile toolchain
#  - target (arch)-(vendor)-(os)-(abi)
#  - arch   - openrisc or1k
#  - vendor - me stafford mitchell horne (ignored by everything)
#  - os     - um linux of course
#  - abi    - gnu for glibc
CROSS=or1k-smh-linux-gnu

# Bootstrap the environment for our scripts
mkdir -p $INSTALLDIR
mkdir -p $SYSROOTDIR

export PATH=$INSTALLDIR/bin:$PATH

export CFLAGS="-g -Og"

# 0 ../glibc.config               - this file sourced by others
# 1 ../glibc.build.binutils
# 2 ../glibc.build.linux-headers 
# 3 ../glibc.build.gcc1
# 4 ../glibc.build.libc-headers   - glibc headers/then glibc
# 5 ../glibc.build.gcc1.5
# 6 ../glibc.build.libc-final     - glibc headers/then glibc
# 7 ../glibc.build.gcc2

