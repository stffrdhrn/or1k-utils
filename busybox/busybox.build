#!/bin/bash
# Script for building busybox and the initramfs

BINDIR=$(dirname $0)
pushd $BINDIR; BINDIR=$PWD; popd
. $BINDIR/busybox.config

mkdir -p $BUILDDIR/busybox-rootfs/
rm -rf $BUILDDIR/busybox-rootfs/*

if ! make -C $BUSYBOX_SRC \
  ARCH=openrisc \
  CROSS_COMPILE=$CROSSTOOL \
  CONFIG_PREFIX=$BUILDDIR/busybox-rootfs/initramfs \
  defconfig busybox install; then
  echo "busybox moke failed! exiting"
  exit 1
fi

pushd $BUILDDIR/busybox-rootfs

 echo "Installing or1k-utils rootfs overlay"
 cp -a $BINDIR/initramfs* .

 # Init just drops us to the shell
 echo "Installing init"
 ln -sf sbin/init initramfs/init

 # Find the libc binaries to allow dynamic linked tools
 crosstool_target=${CROSSTOOL:0:-1}
 crosstool_bin=$(dirname $(which ${CROSSTOOL}gcc))
 crosstool_prefix=$(dirname $crosstool_bin)
 for clue in sysroot/lib/libgcc_s.so lib/libgcc_s.so; do
   clue_path=${crosstool_prefix}/${crosstool_target}/$clue
   echo "Looking for sysroot in: $clue_path"
   if [ -f $clue_path ] ; then
     LIBC=$(dirname $clue_path)
     echo "Found libc sysroot under: $LIBC"
     break
   fi
 done

 if [ -d "$LIBC" ] ; then
   echo "Installing libc"
   mkdir -p initramfs/lib
   cp -a $LIBC/libc.so* initramfs/lib
   cp -a $LIBC/libstdc++.so* initramfs/lib
   cp -a $LIBC/libgcc_s.so* initramfs/lib

   if [ -f initramfs/lib/libc.so ] ; then
     # musl style
     ln -sf libc.so initramfs/lib/ld-musl-or1k.so.1
   else
     # glibc style
     cp -a $LIBC/libm.so* initramfs/lib
     cp -a $LIBC/librt.so* initramfs/lib
     cp -a $LIBC/ld-linux-or1k.so* initramfs/lib
     cp -a $LIBC/libresolv.so* initramfs/lib
     cp -a $LIBC/libnss_*.so* initramfs/lib
   fi
 else
   echo "Cannot find libc binaries under '$crosstool_prefix' install not completed"
   exit 1
 fi
popd
