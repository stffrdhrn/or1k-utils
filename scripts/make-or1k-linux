#!/bin/bash

TOOLCHAIN=${TOOLCHAIN:-or1k-linux-}
LINUX_SRC=${LINUX_SRC:-$HOME/work/linux}

BUILDDIR=${BUILDDIR:-$HOME/work/openrisc}
OR1K_UTILS=${OR1K_UTILS:-$BUILDDIR/or1k-utils}
BUSYBOX=${BUSYBOX:-$BUILDDIR/busybox-rootfs}
OPENADK=${OPENADK:-$BUILDDIR/openadk}

litextftpd=$OR1K_UTILS/litex/tftpd
openadk_source="$OPENADK/target_qemu-or1k_uclibc-ng/qemu-or1k-uclibc-ng-initramfspiggyback_list"
busybox_source="$BUSYBOX/initramfs $BUSYBOX/initramfs.devnodes"

# Select one of these to choose your preferred initramfs
# we use for or1ksim, but no longer for qemu as for qemu we just
# pass in the qcow2 rootfs.
#INITRAMFS_SOURCE=$busybox_source
#INITRAMFS_SOURCE=$openadk_source

run() {
  echo "exec: $@"
  "$@"
}

(
  # Getting a bunch of perl warnings with en_US.utf8
  export LC_ALL=en_US.UTF-8

  cd $LINUX_SRC
  run make -j12 LC_ALL=en_US.UTF-8 ARCH=openrisc \
     CROSS_COMPILE=${TOOLCHAIN} \
     CONFIG_INITRAMFS_SOURCE="$INITRAMFS_SOURCE" \
     $@

  if [ -f arch/openrisc/boot/vmlinux.bin ] && grep -q 'CONFIG_LITEX=y' .config ; then
    run cp arch/openrisc/boot/vmlinux.bin $litextftpd/boot.bin
  fi
#  echo "Generating initramfs.cpio.gz ..."
#  ./usr/gen_initramfs.sh -o initramfs.cpio -u squash -g squash $initramfs_source
#  gzip -f initramfs.cpio
)


# make ARCH=openrisc INSTALL_HDR_PATH=/opt/shorne/software/or1k-linux headers_install
