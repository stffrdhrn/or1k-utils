#!/bin/bash
# Wrapper to run all builds in the right order

DIR=`dirname $0`
source $DIR/glibc.config

start_time=`date -u +%s`
build_log=$BUILDDIR/log/build.log

mkdir -p $BUILDDIR/log

success_or_failure() {
  if grep libc.build.done ${build_log} > /dev/null ; then
    echo -n SUCCESS
  else
    echo -n FAILURE
  fi
}

summary() {
  echo
  echo -n "# build finish:   "; date -Is
  grep glibc.build ${build_log}
  echo -n "# build time(m):  "; expr `date -u +%s` / 60 - $start_time / 60
  echo
}

set -x
# Clean any old artifacts that may impact our build
rm -rf $INSTALLDIR/${CROSS}

time (
  $DIR/glibc.build.binutils &&
  $DIR/glibc.build.linux-headers &&
  $DIR/glibc.build.gcc1 &&
  $DIR/glibc.build.libc-headers &&
  $DIR/glibc.build.gcc1.5 &&
  $DIR/glibc.build.libc-final &&
  $DIR/glibc.build.gcc2 &&
  $DIR/glibc.build.libc-final &&
  $DIR/glibc.build.done
) > ${build_log} 2>&1
set +x

# Sync gcc runtime libs into sysroot
rsync -a $INSTALLDIR/${CROSS}/lib/  $SYSROOTDIR/lib

if [ "$MAILTO" ] ; then
  summary | mail -s "Glibc build report $(date +"%Y-%m-%d-%H:%M") - $(success_or_failure)" $MAILTO
fi
