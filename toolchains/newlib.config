#!/bin/bash

## For debug
# set -x
## Fail fast
# set -e

# Build steps from https://pmc.polytechnique.fr/pagesperso/dc/arm-en.html
# Also:
#  - https://preshing.com/20141119/how-to-build-a-gcc-cross-compiler/
#
# Notes:
#  - binutils works ok

# This directories we will use!

# BUILDDIR where evertying lives
#  - /gcc          - my gcc git repo
#  - /binutils-gdb - my binutils git repo
#  - /newlib       - my newlib git repo
#  - /build-*      - build temporary files
BUILDDIR=${BUILDDIR:-$HOME/work/gnu-toolchain}
# Source locations, which we can override
GCC_SRC=${GCC_SRC:-$BUILDDIR/gcc}
BINUTILS_SRC=${BINUTILS_SRC:-$BUILDDIR/binutils-gdb}
GDB_SRC=${GDB_SRC:-$BUILDDIR/binutils-gdb}
NEWLIB_SRC=${NEWLIB_SRC:-$BUILDDIR/newlib}

for src in $GCC_SRC $BINUTILS_SRC $GDB_SRC $NEWLIB_SRC; do
  if [ ! -d $src ]; then
    echo "ERROR: Missing source dir for: $src"
    echo "Make sure you have git cloned and tarbals extracted for:"
    echo "  gcc:      $GCC_SRC"
    echo "  binutils: $BINUTILS_SRC"
    echo "  gdb:      $GDB_SRC"
    echo "  newlib:   $NEWLIB_SRC"
    exit 1
  fi
done

# where stuff is installed to (prefix vs sysroot?)
INSTALLDIR=${INSTALLDIR:-$BUILDDIR/local}

# Cross compile toolchain
#  - target (arch)-(vendor)-(os)-(abi)
#  - arch   - openrisc or1k
#  - vendor -
#  - os     - elf for bare metal
#  - abi    -
CROSS=${CROSS:-or1k-elf}

# Argument for make -j${THREADS}
THREADS=$(nproc)

# Optional for test notifications
MAILTO=${MAILTO:-shorne@gmail.com}
if [ "$NOTIFY" == 'n' ] ; then
  MAILTO=
fi

# Bootstrap the environment for our scripts
mkdir -p $INSTALLDIR

export PATH=$INSTALLDIR/bin:$PATH

# Clean up compiler flags
#export CFLAGS="-g -Og"
export CFLAGS="-g -O2"
export LDFLAGS=""

# Just run glibc.build
# it will run:
# 0 ../newlib.config              - this file sourced by others
# 1 ../newlib.build.binutils
# 3 ../newlib.build.gcc1
# 6 ../newlib.build               - newlib build
# 7 ../newlib.build.gcc2

