#!/bin/bash

## For debug
# set -x
## Fail fast
# set -e

# Build steps from https://pmc.polytechnique.fr/pagesperso/dc/arm-en.html
# Also:
#  - https://preshing.com/20141119/how-to-build-a-gcc-cross-compiler/
#
# Notes:
#  - binutils works ok

# This directories we will use!

# BUILDDIR where evertying lives
#  - /gcc          - my gcc git repo
#  - /binutils-gdb - my binutils git repo
#  - /newlib       - my newlib git repo
#  - /build-*      - build temporary files
BUILDDIR=$HOME/work/gnu-toolchain

# Where we live
OR1K_UTILS=$HOME/work/openrisc/or1k-utils

# where stuff is installed to (prefix vs sysroot?)
INSTALLDIR=$BUILDDIR/local

# Cross compile toolchain
#  - target (arch)-(vendor)-(os)-(abi)
#  - arch   - openrisc or1k
#  - vendor -
#  - os     - elf for bare metal
#  - abi    -
CROSS=or1k-elf

# Argument for make -j${THREADS}
THREADS=12

# Optional for test notifications
MAILTO=${MAILTO:-shorne@gmail.com}
if [ "$NOTIFY" == 'n' ] ; then
  MAILTO=
fi

# Bootstrap the environment for our scripts
mkdir -p $INSTALLDIR

export PATH=$INSTALLDIR/bin:$OR1K_UTILS/glibc:$PATH

# Clean up compiler flags
#export CFLAGS="-g -Og"
export CFLAGS="-g -O2"
export LDFLAGS=""

# Just run glibc.build
# it will run:
# 0 ../newlib.config              - this file sourced by others
# 1 ../newlib.build.binutils
# 3 ../newlib.build.gcc1
# 6 ../newlib.build               - newlib build
# 7 ../newlib.build.gcc2

